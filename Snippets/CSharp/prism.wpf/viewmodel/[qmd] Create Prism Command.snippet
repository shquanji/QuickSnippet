<?xml version="1.0" encoding="utf-8"?>
<CodeSnippets xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
  <CodeSnippet Format="1.0.0">
    <Header>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
      <Title>Create Prism Command</Title>
      <Author>上海全迹</Author>
      <Description>创建Prism的同步命令处理</Description>
      <HelpUrl></HelpUrl>
      <Shortcut>qmd</Shortcut>
    </Header>
    <Snippet>
      <Declarations>
        <Literal Editable="true">
          <ID>命令描述</ID>
          <ToolTip>命令描述</ToolTip>
          <Default>命令描述</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>Command</ID>
          <ToolTip>Command</ToolTip>
          <Default>Command</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>command</ID>
          <ToolTip>command</ToolTip>
          <Default>command</Default>
          <Function>
          </Function>
        </Literal>
      </Declarations>
      <Code Language="csharp"><![CDATA[#region $命令描述$
/// <summary>
/// $命令描述$ 封装命令字段
/// </summary>
private ICommand _$command$Command;
/// <summary>
/// $命令描述$ 命令
/// </summary>
public ICommand $Command$Command
{
    get
    {
        if (_$command$Command == null) _$command$Command = new DelegateCommand($Command$Execute);
        return _$command$Command;
    }
    set { _$command$Command = value; }
}

/// <summary>
/// $命令描述$ 命令执行方法
/// </summary>
public void $Command$Execute()
{
    $end$
}
#endregion]]></Code>
    </Snippet>
  </CodeSnippet>

    <CodeSnippet Format="1.0.0">
    <Header>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
      <Title>qcommandfull</Title>
      <Author>上海全迹</Author>
      <Description>
      </Description>
      <HelpUrl>
      </HelpUrl>
      <Shortcut>qcommandfull</Shortcut>
    </Header>
    <Snippet>
      <Declarations>
        <Literal Editable="true">
          <ID>命令描述</ID>
          <ToolTip>命令描述</ToolTip>
          <Default>命令描述</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>Command</ID>
          <ToolTip>Command</ToolTip>
          <Default>Command</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>command</ID>
          <ToolTip>command</ToolTip>
          <Default>command</Default>
          <Function>
          </Function>
        </Literal>
      </Declarations>
      <Code Language="csharp"><![CDATA[#region $命令描述$
/// <summary>
/// $命令描述$ 封装命令字段
/// </summary>
private ICommand _$command$Command;
/// <summary>
/// $命令描述$ 命令
/// </summary>
public ICommand $Command$Command
{
    get
    {
        if (_$command$Command == null) _$command$Command = new DelegateCommand($Command$Execute,$Command$CanExecute);
        return _$command$Command;
    }
    set { _$command$Command = value; }
}

/// <summary>
/// $命令描述$ 命令执行方法
/// </summary>
public void $Command$Execute()
{
    $end$
}
/// <summary>
///  $命令描述$ 命令校验方法
/// </summary>
public bool $Command$CanExecute()
{
    return true;
}
#endregion]]></Code>
    </Snippet>
  </CodeSnippet>
  
  <CodeSnippet Format="1.0.0">
    <Header>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
      <Title>qoproperty</Title>
      <Author>上海全迹</Author>
      <Description>
      </Description>
      <HelpUrl>
      </HelpUrl>
      <Shortcut>qoproperty</Shortcut>
    </Header>
    <Snippet>
      <Declarations>
        <Literal Editable="true">
          <ID>属性描述</ID>
          <ToolTip>属性描述</ToolTip>
          <Default>属性描述</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>Field</ID>
          <ToolTip>Field</ToolTip>
          <Default>Field</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>_field</ID>
          <ToolTip>_field</ToolTip>
          <Default>_field</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>type</ID>
          <ToolTip>type</ToolTip>
          <Default>type</Default>
          <Function>
          </Function>
        </Literal>
      </Declarations>
      <Code Language="csharp"><![CDATA[/// <summary>
/// $属性描述$ 属性字段
/// <para>关联属性: $Field$</para>
/// </summary>
private $type$ $_field$;
/// <summary>
/// $属性描述$
/// </summary>
public $type$ $Field$
{
	get { return $_field$;}
	set { $_field$ = value; if(PropertyChanged!=null)PropertyChanged(this,new System.ComponentModel.PropertyChangedEventArgs("$Field$")); }
}]]></Code>
    </Snippet>
  </CodeSnippet>
  
  
    <CodeSnippet Format="1.0.0">
    <Header>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
      <Title>qopropertybynull</Title>
      <Author>上海全迹</Author>
      <Description>
      </Description>
      <HelpUrl>
      </HelpUrl>
      <Shortcut>qopropertybynull</Shortcut>
    </Header>
    <Snippet>
      <Declarations>
        <Literal Editable="true">
          <ID>Field</ID>
          <ToolTip>Field</ToolTip>
          <Default>Field</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>_field</ID>
          <ToolTip>_field</ToolTip>
          <Default>_field</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>type</ID>
          <ToolTip>type</ToolTip>
          <Default>type</Default>
          <Function>
          </Function>
        </Literal>
         <Literal Editable="true">
          <ID>属性描述</ID>
          <ToolTip>属性描述</ToolTip>
          <Default>属性描述</Default>
          <Function>
          </Function>
        </Literal>
      </Declarations>
      <Code Language="csharp"><![CDATA[/// <summary>
/// $属性描述$ 属性字段
/// <para>关联属性: $Field$</para>
/// </summary>
private $type$ $_field$;
/// <summary>
/// $属性描述$
/// </summary>
public $type$ $Field$
{
	get 
	{ 
		if($_field$==null) $_field$ = new $type$();
		return $_field$;
	}
	set 
	{
	 	$_field$ = value;
	 	if(PropertyChanged!=null)PropertyChanged(this,new System.ComponentModel.PropertyChangedEventArgs("$Field$")); 
	}
}]]></Code>
    </Snippet>
  </CodeSnippet>
  
    <CodeSnippet Format="1.0.0">
    <Header>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
      <Title>qproperty</Title>
      <Author>上海全迹</Author>
      <Description>
      </Description>
      <HelpUrl>
      </HelpUrl>
      <Shortcut>qproperty</Shortcut>
    </Header>
    <Snippet>
      <Declarations>
        <Literal Editable="true">
          <ID>属性描述</ID>
          <ToolTip>属性描述</ToolTip>
          <Default>属性描述</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>Field</ID>
          <ToolTip>Field</ToolTip>
          <Default>Field</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>field</ID>
          <ToolTip>field</ToolTip>
          <Default>field</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>type</ID>
          <ToolTip>type</ToolTip>
          <Default>type</Default>
          <Function>
          </Function>
        </Literal>
      </Declarations>
      <Code Language="csharp"><![CDATA[/// <summary>
/// $属性描述$ 属性字段
/// </summary>
private $type$ _$field$;
/// <summary>
/// $属性描述$
/// </summary>
public $type$ $Field$
{
	get { return _$field$;}
	set { _$field$ = value; OnPropertyChanged("$Field$"); }
}]]></Code>
    </Snippet>
  </CodeSnippet>
  
    <CodeSnippet Format="1.0.0">
    <Header>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
      <Title>qpropertybynull</Title>
      <Author>上海全迹</Author>
      <Description>
      </Description>
      <HelpUrl>
      </HelpUrl>
      <Shortcut>qpropertybynull</Shortcut>
    </Header>
    <Snippet>
      <Declarations>
        <Literal Editable="true">
          <ID>Field</ID>
          <ToolTip>Field</ToolTip>
          <Default>Field</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>field</ID>
          <ToolTip>field</ToolTip>
          <Default>field</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>type</ID>
          <ToolTip>type</ToolTip>
          <Default>type</Default>
          <Function>
          </Function>
        </Literal>
         <Literal Editable="true">
          <ID>属性描述</ID>
          <ToolTip>属性描述</ToolTip>
          <Default>属性描述</Default>
          <Function>
          </Function>
        </Literal>
      </Declarations>
      <Code Language="csharp"><![CDATA[/// <summary>
/// $属性描述$ 属性字段
/// <para>关联属性: $Field$</para>
/// </summary>
private $type$ _$field$;
/// <summary>
/// $属性描述$
/// </summary>
public $type$ $Field$
{
	get 
	{ 
		if(_$field$==null) _$field$ = new $type$();
		return _$field$;
	}
	set 
	{
	 	_$field$ = value;
	 	OnPropertyChanged("$Field$"); 
	}
}]]></Code>
    </Snippet>
  </CodeSnippet>
  
    <CodeSnippet Format="1.0.0">
    <Header>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
      <Title>qeventr</Title>
      <Author>上海全迹</Author>
      <Description>
      </Description>
      <HelpUrl>
      </HelpUrl>
      <Shortcut>qeventv</Shortcut>
    </Header>
    <Snippet>
      <Declarations>
        <Literal Editable="true">
          <ID>Name</ID>
          <ToolTip>Name</ToolTip>
          <Default>Name</Default>
          <Function>
          </Function>
        </Literal>
       <Literal Editable="false">
					<ID>classname</ID>
					<ToolTip>类名</ToolTip>
					<Function>ClassName()</Function>
					<Default>ClassNamePlaceholder</Default>
				</Literal>
      </Declarations>
      <Code Language="csharp"><![CDATA[ public static readonly RoutedEvent $Name$Event = EventManager.RegisterRoutedEvent(
            "$Name$", RoutingStrategy.Bubble,
            typeof(RoutedEventHandler), typeof($classname$)
            );

        public event RoutedEventHandler $Name$
        {
            add
            {
                AddHandler($classname$.$Name$Event, value);
            }
            remove
            {
                RemoveHandler($classname$.$Name$Event, value);
            }
        }]]></Code>
    </Snippet>
  </CodeSnippet>
  
    <CodeSnippet Format="1.0.0">
    <Header>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
      <Title>qwclose</Title>
      <Author>上海全迹</Author>
      <Description>
      </Description>
      <HelpUrl>
      </HelpUrl>
      <Shortcut>qwclose</Shortcut>
    </Header>
    <Snippet>
      <Declarations>
        <Literal Editable="true">
          <ID>关闭请求</ID>
          <ToolTip>关闭请求</ToolTip>
          <Default>关闭请求</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>_closeRequest</ID>
          <ToolTip>_closeRequest</ToolTip>
          <Default>_closeRequest</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>CloseRequest</ID>
          <ToolTip>CloseRequest</ToolTip>
          <Default>CloseRequest</Default>
          <Function>
          </Function>
        </Literal>
      </Declarations>
      <Code Language="csharp" Delimiter="$"><![CDATA[        /// <summary>
        /// $关闭请求$ 属性字段
        /// </summary>
        private InteractionRequest<Notification> $_closeRequest$;
        /// <summary>
        /// $关闭请求$
        /// </summary>
        public InteractionRequest<Notification> $CloseRequest$
        {
            get
            {
                if ($_closeRequest$ == null) $_closeRequest$ = new InteractionRequest<Notification>();
                return $_closeRequest$;
            }
            set { $_closeRequest$ = value; OnPropertyChanged("$CloseRequest$"); }
        }]]></Code>
    </Snippet>
  </CodeSnippet>
  
  
  
  
  
  
  
  
  
  
  
  
  
  </CodeSnippets>